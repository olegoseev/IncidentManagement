// <auto-generated />
using System;
using IoT.IncidentManagement.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IoT.IncidentManagement.Persistence.Migrations
{
    [DbContext(typeof(IncidentManagementDbContext))]
    partial class IncidentManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.ActionStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("InitTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Repeat")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ActionsStore");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Action 1",
                            InitTime = new DateTime(2021, 10, 28, 4, 25, 37, 979, DateTimeKind.Utc).AddTicks(1468),
                            Interval = 15,
                            Order = 1,
                            Repeat = false,
                            State = "INITIAL"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Action 2",
                            InitTime = new DateTime(2021, 10, 28, 4, 25, 37, 979, DateTimeKind.Utc).AddTicks(1704),
                            Interval = 15,
                            Order = 2,
                            Repeat = false,
                            State = "INITIAL"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Action 3",
                            InitTime = new DateTime(2021, 10, 28, 4, 25, 37, 979, DateTimeKind.Utc).AddTicks(1706),
                            Interval = 15,
                            Order = 3,
                            Repeat = true,
                            State = "INITIAL"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Action 4",
                            InitTime = new DateTime(2021, 10, 28, 4, 25, 37, 979, DateTimeKind.Utc).AddTicks(1707),
                            Interval = 15,
                            Order = 4,
                            Repeat = true,
                            State = "INITIAL"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Action 5",
                            InitTime = new DateTime(2021, 10, 28, 4, 25, 37, 979, DateTimeKind.Utc).AddTicks(1708),
                            Interval = 15,
                            Order = 5,
                            Repeat = true,
                            State = "INITIAL"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Action 6",
                            InitTime = new DateTime(2021, 10, 28, 4, 25, 37, 979, DateTimeKind.Utc).AddTicks(1709),
                            Interval = 15,
                            Order = 6,
                            Repeat = false,
                            State = "INITIAL"
                        });
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Bridge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BridgeType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Bridges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BridgeType = "IoT TS",
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 977, DateTimeKind.Utc).AddTicks(9190),
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 977, DateTimeKind.Utc).AddTicks(9778)
                        },
                        new
                        {
                            Id = 2,
                            BridgeType = "CMD",
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(700),
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(703)
                        },
                        new
                        {
                            Id = 3,
                            BridgeType = "NOC",
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(705),
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(705)
                        });
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.ClosureAction", b =>
                {
                    b.Property<int>("IncidentId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToDoList")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IncidentId");

                    b.HasIndex("IncidentId");

                    b.ToTable("ClosureActions");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BridgeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidentCase")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NotifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeverityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BridgeId");

                    b.HasIndex("IncidentCase");

                    b.HasIndex("SeverityId");

                    b.HasIndex("StatusId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.ManagerAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IncidentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Repeat")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.ToTable("ManagerActions");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IncidentId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Record")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("RecordTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IncidentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Repeat")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.NotificationStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Repeat")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("NotificationsStore");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Group = "INTERNAL",
                            Interval = 15,
                            Order = 1,
                            Repeat = false,
                            State = "INITIAL",
                            Type = "INITIAL"
                        },
                        new
                        {
                            Id = 2,
                            Group = "INTERNAL",
                            Interval = 15,
                            Order = 2,
                            Repeat = true,
                            State = "INITIAL",
                            Type = "UPDATE"
                        },
                        new
                        {
                            Id = 3,
                            Group = "INTERNAL",
                            Interval = 15,
                            Order = 3,
                            Repeat = false,
                            State = "INITIAL",
                            Type = "FINAL"
                        },
                        new
                        {
                            Id = 4,
                            Group = "EXTERNAL",
                            Interval = 15,
                            Order = 1,
                            Repeat = false,
                            State = "INITIAL",
                            Type = "INITIAL"
                        },
                        new
                        {
                            Id = 5,
                            Group = "EXTERNAL",
                            Interval = 15,
                            Order = 2,
                            Repeat = true,
                            State = "INITIAL",
                            Type = "UPDATE"
                        },
                        new
                        {
                            Id = 6,
                            Group = "EXTERNAL",
                            Interval = 15,
                            Order = 3,
                            Repeat = false,
                            State = "INITIAL",
                            Type = "FINAL"
                        });
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Participant", b =>
                {
                    b.Property<int>("IncidentId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IncidentId");

                    b.HasIndex("IncidentId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Severity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidentSeverity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationInterval")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Severities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(9939),
                            IncidentSeverity = "P1",
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(9942),
                            NotificationInterval = 60
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(9944),
                            IncidentSeverity = "P2",
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(9945),
                            NotificationInterval = 90
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(9946),
                            IncidentSeverity = "P3",
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(9947),
                            NotificationInterval = 120
                        });
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(8887),
                            CurrentStatus = "Active",
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(8891)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(8893),
                            CurrentStatus = "Inactive",
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(8894)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(8895),
                            CurrentStatus = "Postponed",
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(8896)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Initial Migration",
                            CreatedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(8897),
                            CurrentStatus = "Closed",
                            LastModifiedBy = "Initial Migration",
                            LastModifiedDate = new DateTime(2021, 10, 28, 4, 25, 37, 978, DateTimeKind.Utc).AddTicks(8898)
                        });
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.ClosureAction", b =>
                {
                    b.HasOne("IoT.IncidentManagement.Domain.Entities.Incident", "Incident")
                        .WithOne("ClosureAction")
                        .HasForeignKey("IoT.IncidentManagement.Domain.Entities.ClosureAction", "IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Incident", b =>
                {
                    b.HasOne("IoT.IncidentManagement.Domain.Entities.Bridge", "Bridge")
                        .WithMany()
                        .HasForeignKey("BridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IoT.IncidentManagement.Domain.Entities.Severity", "Severity")
                        .WithMany()
                        .HasForeignKey("SeverityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IoT.IncidentManagement.Domain.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bridge");

                    b.Navigation("Severity");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.ManagerAction", b =>
                {
                    b.HasOne("IoT.IncidentManagement.Domain.Entities.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Note", b =>
                {
                    b.HasOne("IoT.IncidentManagement.Domain.Entities.Incident", "Incident")
                        .WithMany("Notes")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Notification", b =>
                {
                    b.HasOne("IoT.IncidentManagement.Domain.Entities.Incident", "Incident")
                        .WithMany("Notifications")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Participant", b =>
                {
                    b.HasOne("IoT.IncidentManagement.Domain.Entities.Incident", "Incident")
                        .WithOne("Participant")
                        .HasForeignKey("IoT.IncidentManagement.Domain.Entities.Participant", "IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("IoT.IncidentManagement.Domain.Entities.Incident", b =>
                {
                    b.Navigation("ClosureAction");

                    b.Navigation("Notes");

                    b.Navigation("Notifications");

                    b.Navigation("Participant");
                });
#pragma warning restore 612, 618
        }
    }
}
